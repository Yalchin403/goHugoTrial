<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Algorithms on Yalchin's Blog</title><link>/tags/algorithms/</link><description>Recent content in Algorithms on Yalchin's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Yalchin Mammadli</copyright><lastBuildDate>Sun, 24 Apr 2022 14:20:57 +0400</lastBuildDate><atom:link href="/tags/algorithms/index.xml" rel="self" type="application/rss+xml"/><item><title>Sorting Algorithms and Binary Search in Python</title><link>/posts/sorting-algorithms-and-binary-search-in-python/</link><pubDate>Sun, 24 Apr 2022 14:20:57 +0400</pubDate><guid>/posts/sorting-algorithms-and-binary-search-in-python/</guid><description>Selection Sort Selection sort is about selecting the minimum value in an unsorted array and moving it towards the front by comparing. Here is an example code snippet to implement binary search in Python:
def selection_sort(list_): length = len(list_) for index in range(length - 1): min = list_[index] for j in range(index+ 1, length): if list_[j] &amp;lt; min: min = list_[j] list_[j], list_[index] = list_[index], list_[j] return list_ unsorted_list = [7,8,9,8,7,6,5,6,7,8,9,8,7,6,5,6,7,8,0] selection_sort(unsorted_list) Buble Sort The bubble sort algorithm is applied by going through an array of data a number of times and at the same time comparing two adjacent numbers at a time in order to reorder them if there are out of order.</description></item></channel></rss>