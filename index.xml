<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Yalchin Mammadli on Yalchin's Blog</title><link>/</link><description>Recent content in Yalchin Mammadli on Yalchin's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Yalchin Mammadli</copyright><lastBuildDate>Sat, 23 Apr 2022 14:24:13 +0400</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker Compose for Elastic Search and Kibana</title><link>/posts/docker-compose-for-elastic-search-and-kibana/</link><pubDate>Sun, 24 Apr 2022 14:36:58 +0400</pubDate><guid>/posts/docker-compose-for-elastic-search-and-kibana/</guid><description>Command: docker-compose -f docker-compose.yml up -d Content of docker-compose.yml: version: &amp;#39;3.7&amp;#39; services: elasticsearch: image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0 container_name: elasticsearch restart: always environment: - xpack.security.enabled=false - discovery.type=single-node ulimits: memlock: soft: -1 hard: -1 nofile: soft: 65536 hard: 65536 cap_add: - IPC_LOCK volumes: - elasticsearch-data-volume:/usr/share/elasticsearch/data ports: - 9200:9200 kibana: container_name: kibana image: docker.</description></item><item><title>How to Securely Connect to Virtual Private Server</title><link>/posts/how-to-securely-connect-to-virtual-private-server/</link><pubDate>Sun, 24 Apr 2022 14:26:43 +0400</pubDate><guid>/posts/how-to-securely-connect-to-virtual-private-server/</guid><description>For your information, this tutorial is not written by me absolutely, I&amp;rsquo;ve used ssh connection part of this tutorial and added some comments to make individual tutorial on &amp;ldquo;how to create your own vpn&amp;rdquo; and also covers the things that we can implement to make our vps the way more secure.
Generating SSH keys
Using a cleartext password to log in to your server is never a good idea since the password is not encrypted in transit and can be exposed on a hostile network.</description></item><item><title>Sorting Algorithms and Binary Search in Python</title><link>/posts/sorting-algorithms-and-binary-search-in-python/</link><pubDate>Sun, 24 Apr 2022 14:20:57 +0400</pubDate><guid>/posts/sorting-algorithms-and-binary-search-in-python/</guid><description>Selection Sort Selection sort is about selecting the minimum value in an unsorted array and moving it towards the front by comparing. Here is an example code snippet to implement binary search in Python:
def selection_sort(list_): length = len(list_) for index in range(length - 1): min = list_[index] for j in range(index+ 1, length): if list_[j] &amp;lt; min: min = list_[j] list_[j], list_[index] = list_[index], list_[j] return list_ unsorted_list = [7,8,9,8,7,6,5,6,7,8,9,8,7,6,5,6,7,8,0] selection_sort(unsorted_list) Buble Sort The bubble sort algorithm is applied by going through an array of data a number of times and at the same time comparing two adjacent numbers at a time in order to reorder them if there are out of order.</description></item><item><title>Map, Sort, and Filter Functions in Python</title><link>/posts/map-sort-and-filter-functions-in-python/</link><pubDate>Sat, 23 Apr 2022 23:03:25 +0400</pubDate><guid>/posts/map-sort-and-filter-functions-in-python/</guid><description>This tutorial will help you to see real example of using map, sort, and filter functions along with lambda functions in Python.
Map Function Example
Python&amp;rsquo;s map() is a built-in function that allows you to process and transform all the items in an iterable without using an explicit for loop, a technique commonly known as mapping. map() is useful when you need to apply a transformation function to each item in an iterable and transform them into a new iterable.</description></item><item><title>How to Set Up Supervisor Service</title><link>/posts/how-to-set-up-supervisor-service/</link><pubDate>Sat, 23 Apr 2022 22:53:12 +0400</pubDate><guid>/posts/how-to-set-up-supervisor-service/</guid><description>This tutorial will help you to run any application in the background with the help of &amp;ldquo;Supervisor&amp;rdquo;. For this tutorial specifically, I&amp;rsquo;m going to show how we can set up discord.py bot with &amp;ldquo;Supervisor&amp;rdquo;, however, this is not the limitation. You can set up any application you want with &amp;ldquo;Supervisor&amp;rdquo;. I will state essential commands, and also will show you an example configuration file, that you can use to set up your application.</description></item><item><title>How to Set Up GitHub Ssh Key</title><link>/posts/how-to-set-up-github-ssh-key/</link><pubDate>Sat, 23 Apr 2022 20:49:33 +0400</pubDate><guid>/posts/how-to-set-up-github-ssh-key/</guid><description>Github SSH Key set up
This tutorial will help you to be able to set up SSH key connection to your github account on a Linux machine. You can also continue to read this tutorial if you want to set up Deploy Keys.
For now let&amp;rsquo;s just assume that you&amp;rsquo;ve successfully set up SSH key, after that you need to make sure that you don&amp;rsquo;t access your repo with HTTPS, but with ssh, so if you previously cloned your repo wirh https set it to ssh as below:</description></item><item><title>How to Set Up Mailgun in Django</title><link>/posts/how-to-set-up-mailgun-in-django/</link><pubDate>Sat, 23 Apr 2022 20:41:10 +0400</pubDate><guid>/posts/how-to-set-up-mailgun-in-django/</guid><description>In this tutorial, I will try to cover configuring a custom domain for sending emails in your application. The benefit of using mailgun is that it allows you to send (5,000) emails for free during the first three months (then you will pay $0.8 per 1,000 emails) and its setup procedure is so straightforward. You will only need to add your payment verification to be able to send emails without any restrictions.</description></item><item><title>How to Deploy NodeJs App</title><link>/posts/how-to-deploy-nodejs-app/</link><pubDate>Sat, 23 Apr 2022 20:33:34 +0400</pubDate><guid>/posts/how-to-deploy-nodejs-app/</guid><description>In this tutorial, we will be deploying a simple URL shortener API built-in express framework of NodeJs. It is pretty simple, uses MongoDB as its database, and you can find its source code: https://yalchin.ml/Cq93RQ.
As a VPS, I use a Linode ubuntu server, and I assume that you have at least some basic knowledge when it comes to Linux.
Install Node and NPM curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - sudo apt install nodejs # verify that bash is installed node --version Clone your Repo git clone [link to your github repo] Install npm dependency packages cd yourproject npm install npm start (or whatever your start command) # stop app ctrl+C To be able to run our app in the background continuously, we will be using a package called PM2.</description></item><item><title>Vim Cheatsheet</title><link>/posts/vim-cheatsheet/</link><pubDate>Sat, 23 Apr 2022 20:21:07 +0400</pubDate><guid>/posts/vim-cheatsheet/</guid><description>No Command Meaning 1 :w Save 2 :q Quit 3 :q! Quit without saving 4 :wq Quit with saving 5 k Navigates up 6 j Navigates down 7 h Navigates left 8 l Navigates right 9 i Enter insert mode 10 esc or ctrl +[ Enter normal mode 11 gg Navigates to the top 12 G Navigates to bottom 13 H High: takes you to the top of your code 14 M Middle: takes you to the middle of your code 15 L Low: takes you to the bottom of your code 16 nG Navigates to n-th line (example - 3G navigates to 3rd line) 17 { Navigates one code block up 18 } Navigates one code block down 19 nk N lines up 20 nj N lines down 21 nh N lines left 22 nl n lines right 23 u Undo 24 ctrl + r Redo 25 .</description></item><item><title>Contact</title><link>/personal/contact/</link><pubDate>Sat, 23 Apr 2022 02:30:25 +0400</pubDate><guid>/personal/contact/</guid><description>Phone := +994 70 501 9780 Email := yalchinmammadli@yalchin.info Telegram := @mrRootLog</description></item></channel></rss>